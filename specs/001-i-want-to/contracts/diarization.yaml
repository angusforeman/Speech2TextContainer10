openapi: 3.0.3
info:
  title: Azure Speech Container STT API
  description: |
    Contract for Azure Speech-to-Text container v5.0.3-preview conversation transcription endpoint.
    This contract documents the diarization-enabled transcription API used by the CLI.
  version: 5.0.3-preview
  contact:
    name: Azure Cognitive Services Speech
    url: https://learn.microsoft.com/en-us/azure/ai-services/speech-service/

servers:
  - url: http://localhost:5000
    description: Local Docker container (default)
  - url: http://speech-to-text-preview:5000
    description: Container accessible via Docker network name

paths:
  /speech/recognition/conversation/cognitiveservices/v1:
    post:
      summary: Transcribe audio with optional diarization
      description: |
        Performs speech-to-text transcription on uploaded audio file.
        When diarizationEnabled=true, response includes speaker identification.
      operationId: transcribeAudio
      tags:
        - Transcription
      parameters:
        - name: language
          in: query
          description: Language code for transcription
          required: true
          schema:
            type: string
            enum:
              - en-US
            example: en-US
        - name: format
          in: query
          description: Response format detail level
          required: true
          schema:
            type: string
            enum:
              - simple
              - detailed
            example: detailed
        - name: diarizationEnabled
          in: query
          description: Enable speaker diarization (speaker identification)
          required: false
          schema:
            type: boolean
            default: false
          example: true
        - name: profanity
          in: query
          description: Profanity filter mode
          required: false
          schema:
            type: string
            enum:
              - masked
              - removed
              - raw
            default: masked
      requestBody:
        description: Audio file binary data
        required: true
        content:
          audio/wav:
            schema:
              type: string
              format: binary
          audio/mpeg:
            schema:
              type: string
              format: binary
          audio/flac:
            schema:
              type: string
              format: binary
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Transcription successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionResponse'
              examples:
                successWithDiarization:
                  summary: Successful transcription with speaker diarization
                  value:
                    RecognitionStatus: Success
                    Offset: 0
                    Duration: 150000000
                    NBest:
                      - Confidence: 0.92
                        Lexical: hello this is a test of speaker diarization
                        ITN: hello this is a test of speaker diarization
                        MaskedITN: hello this is a test of speaker diarization
                        Display: Hello, this is a test of speaker diarization.
                        SpeakerId: 1
                    Words:
                      - Word: Hello
                        Offset: 1000000
                        Duration: 5000000
                        SpeakerId: 1
                      - Word: this
                        Offset: 6000000
                        Duration: 3000000
                        SpeakerId: 1
        '400':
          description: Bad request (invalid audio format or parameters)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or missing API key)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '408':
          description: Request timeout (audio processing took too long)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /status:
    get:
      summary: Container health check
      description: Returns container health and readiness status
      operationId: getStatus
      tags:
        - Health
      responses:
        '200':
          description: Container is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '503':
          description: Container is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Ocp-Apim-Subscription-Key
      description: Azure Speech subscription key (matches APIKEY environment variable)

  schemas:
    TranscriptionResponse:
      type: object
      required:
        - RecognitionStatus
      properties:
        RecognitionStatus:
          type: string
          description: Status of the recognition attempt
          enum:
            - Success
            - NoMatch
            - InitialSilenceTimeout
            - BabbleTimeout
            - Error
          example: Success
        Offset:
          type: integer
          format: int64
          description: Start offset in ticks (10,000 ticks = 1ms)
          example: 0
        Duration:
          type: integer
          format: int64
          description: Duration of recognized audio in ticks
          example: 150000000
        NBest:
          type: array
          description: N-best recognition results (usually only one for conversation mode)
          items:
            $ref: '#/components/schemas/NBestResult'
        Words:
          type: array
          description: Word-level timing and speaker info (when diarization enabled)
          items:
            $ref: '#/components/schemas/WordInfo'

    NBestResult:
      type: object
      required:
        - Display
      properties:
        Confidence:
          type: number
          format: float
          description: Overall confidence score (0.0-1.0)
          minimum: 0.0
          maximum: 1.0
          example: 0.92
        Lexical:
          type: string
          description: Lexical form (no punctuation, lowercase)
          example: hello this is a test
        ITN:
          type: string
          description: Inverse text normalization form
          example: hello this is a test
        MaskedITN:
          type: string
          description: ITN with profanity masked
          example: hello this is a test
        Display:
          type: string
          description: Display form (capitalized, punctuated) - preferred for output
          example: Hello, this is a test.
        SpeakerId:
          type: string
          description: Speaker identifier (when diarization enabled)
          example: "1"

    WordInfo:
      type: object
      required:
        - Word
        - Offset
        - Duration
      properties:
        Word:
          type: string
          description: Recognized word
          example: Hello
        Offset:
          type: integer
          format: int64
          description: Start offset of word in ticks
          example: 1000000
        Duration:
          type: integer
          format: int64
          description: Duration of word in ticks
          example: 5000000
        SpeakerId:
          type: string
          description: Speaker who said this word (when diarization enabled)
          example: "1"

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
              example: InvalidRequest
            message:
              type: string
              description: Human-readable error message
              example: The audio format is not supported

    StatusResponse:
      type: object
      properties:
        status:
          type: string
          description: Container health status
          enum:
            - Healthy
            - Unhealthy
          example: Healthy
        version:
          type: string
          description: Container version
          example: 5.0.3-preview
